'use strict';

angular.module('dukemedicine.mobileNav', ['dukemedicine']);

angular.element(document).ready(function() {
    //Fixing facebook bug with redirect
    if (window.location.hash === '#_=_') window.location.hash = '#!';

    //Then init the app
    angular.bootstrap(angular.element(document.getElementById('mobile-search-header')), ['dukemedicine.mobileNav']);
    angular.bootstrap(angular.element(document.getElementById('mobile-menu')), ['dukemedicine.mobileNav']);
});

'use strict';


angular.module('dukemedicine.mobileNav')
.factory('AllSearchParams', ['SolrService', function(SolrService){

    var getFilterQueries = function(){
        return [
          'NOT ss_type: clinical_trial_detail'
        ];
    };

    var getQueryFields = function(){
        return [
            /*'tm_title^1.0',
            'tm_field_event_organizer^0.2',
            'tm_field_event_subjects^0.3',
            'tm_field_phone_number^0.1',
            'tm_field_sub_title^1.0',
            'tm_field_alias^1.0',
            'tm_field_treatment_tests_overview^0.8',
            'tm_field_treatment_tests_title^1.0',
            'tm_field_treatment_treatments_title^1.0',
            'tm_field_treatment_treatmnts_overvw^1.0',
            'tm_field_clin_triial_detail_reqs^0.1',
            'tm_field_office_phone^0.1',
            'tm_field_physician_overview^1.0',
            'tm_field_physician_suffix^0.1',
            'tm_field_physician_board_certs^0.3',
            'tm_field_physician_recognitions^0.2',
            'tm_field_legacy_service_terms^1.0',
            'tm_field_custom_terms^1.0',
            'tm_field_news_overview^1.0',
            'tm_field_patient_story_name^0.8',
            'tm_field_parking^0.1',
            'tm_field_insurance_copy^1.0',
            'tm_search_api_aggregation_1^1.0',
            'tm_search_api_aggregation_3^3.0',
            'tm_body$value^0.1',
            'tm_body$summary^0.1',
            'tm_field_event_address$street^0.5',
            'tm_field_event_address$additional^1.0',
            'tm_field_event_address$city^1.0',
            'tm_field_event_address$province^1.0',
            'tm_field_event_address$postal_code^1.0',
            'tm_field_event_address$country^1.0',
            'tm_field_event_address$province_name^1.0',
            'tm_field_event_address$country_name^1.0',
            'tm_field_event_speakers$value^0.3',
            'tm_field_treatment_terms$name^3.0',
            'tm_field_treatment_terms$description^1.0',
            'tm_field_overview_group$field_overview_header^1.0',
            'tm_field_overview_group$field_other_treatments_desc^1.0',
            'tm_field_overview_group$field_other_treatments_title^1.0',
            'tm_field_overview_group$field_treatment_treatments_title^1.0',
            'tm_field_appointments_questions$field_overview_header^1.0',
            'tm_field_appointments_questions$field_other_treatments_desc^1.0',
            'tm_field_appointments_questions$field_other_treatments_title^1.0',
            'tm_field_appointments_questions$field_treatment_treatments_title^1.0',
            'tm_field_billing_questions$field_overview_header^1.0',
            'tm_field_billing_questions$field_other_treatments_desc^1.0',
            'tm_field_billing_questions$field_other_treatments_title^1.0',
            'tm_field_billing_questions$field_treatment_treatments_title^1.0',
            'tm_field_website_questions$field_overview_header^1.0',
            'tm_field_website_questions$field_other_treatments_desc^1.0',
            'tm_field_website_questions$field_other_treatments_title^1.0',
            'tm_field_website_questions$field_treatment_treatments_title^1.0',
            'tm_field_tags$name^1.0',
            'tm_field_tags$description^1.0',
            'tm_field_treatment_treatments$field_overview_header^1.0',
            'tm_field_treatment_treatments$field_other_treatments_desc^1.0',
            'tm_field_treatment_treatments$field_other_treatments_title^2.0',
            'tm_field_treatment_treatments$field_treatment_treatments_title^2.0',
            'tm_field_location_address$name^1.0',
            'tm_field_location_address$street^0.5',
            'tm_field_location_address$additional^1.0',
            'tm_field_location_address$city^1.0',
            'tm_field_location_address$province^1.0',
            'tm_field_location_address$postal_code^1.0',
            'tm_field_location_address$country^1.0',
            'tm_field_location_address$province_name^1.0',
            'tm_field_location_address$country_name^1.0',
            'tm_field_location_type$name^1.0',
            'tm_field_location_type$description^1.0',
            'tm_field_treatment_location_ovrview$value^1.0',
            'tm_field_treatment_group_overview$value^1.0',
            'tm_field_overview_group$field_overview_text$value',
            'tm_field_reference_locations$field_location_address$street^0.5',
            'tm_field_reference_locations$field_location_address$city^1.0',
            'tm_field_treatment_treatments$field_overview_text$value^1.0',
            'tm_field_treatment_treatments$field_treatment_test_desc$value^1.0',
            'tm_field_treatment_treatments$field_treatment_test_link$title^1.0',
            'tm_field_treatment_treatments$field_treatment_treatment_desc$value^1.0',
            'tm_field_treatment_treatments$field_treatment_treatment_link$title^1.0',
            'ss_field_physician_last_name^0.5',
            'ss_field_physician_first_name^0.5',
            'tm_field_specialties^2.0',
            'ss_field_initials',
            'tm_field_languages_spoken^3.0',
            'text_exact',
            'specialty_exact',
            'locations_title'*/
        ];
    };

    var getBoostQueries = function(){
        return [
        ];
    };

    var getPhraseFields = function(){
        return [
            /*'text_exact',
            'specialty_exact^4.0',
            'tm_field_phone_number',
            'tm_title^3.0',
            'tm_field_sub_title',
            'tm_field_event_organizer',
            'tm_field_event_subjects',
            'tm_field_alias',
            'tm_field_treatment_tests_overview',
            'tm_field_treatment_tests_title',
            'tm_field_treatment_treatments_title',
            'tm_field_treatment_treatmnts_overvw',
            'tm_field_clin_triial_detail_reqs',
            'tm_field_physician_overview',
            'tm_field_physician_suffix',
            'tm_field_physician_board_certs',
            'tm_field_physician_recognitions',
            'tm_field_legacy_service_terms',
            'tm_field_news_overview',
            'tm_field_patient_story_name',
            'tm_field_office_phone',
            'tm_field_parking',
            'tm_search_api_aggregation_1',
            'tm_search_api_aggregation_3',
            'tm_field_tags$name',
            'tm_field_tags$description',
            'tm_field_overview_group$field_overview_header',
            'tm_field_overview_group$field_other_treatments_desc',
            'tm_field_overview_group$field_other_treatments_title',
            'tm_field_overview_group$field_treatment_treatments_title',
            'tm_field_treatment_terms$name^3.0',
            'tm_field_treatment_terms$description',
            'tm_field_event_address$street',
            'tm_field_event_address$additional',
            'tm_field_event_address$city',
            'tm_field_event_address$province',
            'tm_field_event_address$postal_code',
            'tm_field_event_address$country',
            'tm_field_event_address$province_name',
            'tm_field_event_address$country_name',
            'tm_field_event_speakers$value',
            'tm_field_appointments_questions$field_overview_header',
            'tm_field_appointments_questions$field_other_treatments_desc',
            'tm_field_appointments_questions$field_other_treatments_title',
            'tm_field_appointments_questions$field_treatment_treatments_title',
            'tm_field_billing_questions$field_overview_header',
            'tm_field_billing_questions$field_other_treatments_desc',
            'tm_field_billing_questions$field_other_treatments_title',
            'tm_field_billing_questions$field_treatment_treatments_title',
            'tm_field_website_questions$field_overview_header',
            'tm_field_website_questions$field_other_treatments_desc',
            'tm_field_website_questions$field_other_treatments_title',
            'tm_field_website_questions$field_treatment_treatments_title',
            'tm_field_treatment_treatments$field_overview_header',
            'tm_field_treatment_treatments$field_other_treatments_desc',
            'tm_field_treatment_treatments$field_other_treatments_title',
            'tm_field_treatment_treatments$field_treatment_treatments_title',
            'tm_field_location_address$name',
            'tm_field_location_address$street',
            'tm_field_location_address$additional',
            'tm_field_location_address$city',
            'tm_field_location_address$province',
            'tm_field_location_address$postal_code',
            'tm_field_location_address$country',
            'tm_field_location_address$province_name',
            'tm_field_location_address$country_name',
            'tm_field_location_type$name',
            'tm_field_location_type$description',
            'tm_field_treatment_location_ovrview$value',
            'tm_field_treatment_group_overview$value',
            'tm_field_overview_group$field_overview_text$value^5.0',
            'tm_field_reference_locations$field_location_address$street',
            'tm_field_reference_locations$field_location_address$city',
            'tm_field_treatment_treatments$field_overview_text$value',
            'tm_field_treatment_treatments$field_treatment_test_desc$value',
            'tm_field_treatment_treatments$field_treatment_test_link$title',
            'tm_field_treatment_treatments$field_treatment_treatment_desc$value',
            'tm_field_treatment_treatments$field_treatment_treatment_link$title'*/
        ];
    };

    var getParams = function(start, rows){
        return {
            'start': start,
            'rows': rows,
            'sort': 'score desc',
            'endpoint' : '/mobileSearch'
        };
    };


    var getReturnFields = function(){
        return [];
    };

    var setup = function(start, rows){
        SolrService.clearAll();
        SolrService.setFilterQueries(this.getFilterQueries());
        SolrService.setQueryFields(this.getQueryFields());
        SolrService.setBoostQueries(this.getBoostQueries());
        SolrService.setPhraseFields(this.getPhraseFields());
        SolrService.setParams(this.getParams(start, rows));
        SolrService.setReturnFields(this.getReturnFields());
    };

    return {
        getFilterQueries: getFilterQueries,
        getQueryFields: getQueryFields,
        getBoostQueries: getBoostQueries,
        getPhraseFields: getPhraseFields,
        getParams: getParams,
        getReturnFields: getReturnFields,
        setup: setup
    };
}]);

'use strict';

angular.module('dukemedicine.mobileNav').controller('MobileHeaderCtrl', ['$scope', '$window',
	function($scope, $window){
		$scope.menuOpen = false;
		$scope.searchOpen = false;

		$scope.triggerMenu = function() {
			$scope.menuOpen = !$scope.menuOpen;
			angular.element('#mobile-menu, body, #page').toggleClass('open');

		};

		$scope.triggerSearch = function() {
			$scope.searchOpen = !$scope.searchOpen;
		};

		angular.element($window).bind('resize', function() {
			if($scope.menuOpen && $window.innerWidth > 970) {
				$scope.menuOpen = !$scope.menuOpen;
				angular.element('#mobile-menu, body, #page').toggleClass('open');
			}
	    });


	}
]);

'use strict';

angular.module('dukemedicine.mobileNav').controller('MobileNavigationCtrl', ['$scope',
	function($scope){
		$scope.toggleOpen = function($event) {
			if($event.srcElement.className !== 'subsidiary-title') {
				angular.element($event.currentTarget).toggleClass('active');
			}
		};


		$scope.searchRefresh = function($event) {
			if($event) {
				if(($event.target.href.split('#!')[0]).indexOf(window.location.pathname) > 0) {
					window.location = $event.target.href;
					window.location.reload(true);
				}
			}

		};
	}
]);

'use strict';

angular.module('dukemedicine.mobileNav')
.directive('ngDoctorSmallThumbnail', function () {
  return {
    restrict: 'A',
    require: '^doctor',
    scope: {
      'doctor' : '='
    },
    template: '<span data-ng-class="{stockThumbnail : !hasImage}"></span><img data-ng-src="{{doctorUrl}}" alt="" />',
    controller: function($scope, FileService) {
        if($scope.doctor.is_field_physician_photo$file !== undefined) {
            FileService
            .getFile($scope.doctor.is_field_physician_photo$file)
            .then(function(data) {
                if(data.error === undefined) {
                    $scope.doctorUrl = data.image_url ? data.image_url : '';
                } else {
                    console.log(data.error);
                }
            }, function(errorData) {
                console.log(errorData.error);
            });
        } else{
          $scope.doctorUrl = '/sites/www.dukemedicine.org/themes/dukezen/images/default_physician_photo.png';
        }
    }
  };
});

'use strict';

angular.module('dukemedicine.mobileNav').directive('ngSuggestList', function () {
    return {
        restrict: 'A',
        template: '<form data-ng-submit="submitQuery()" class="input-prepend">' +
                        '<input class="ajax-search-box" type="text" placeholder="{{placeholderText}}" data-ng-model="query">' +
                        '<button type="submit" class="add-on"><i class="icon-search"></i></button>' +
                    '</form>'+
                    '<div id="background"></div>'+
                    '<ul id="auto-complete-result">'+
                        '<li data-ng-repeat="result in results track by $index" data-ng-class="{last: $last}">'+
                            '<a class="result-title" data-ng-click="closeModal($event)" data-ng-href="{{result.ss_url | encodeResultUrl}}"></a>'+
                            '<i data-ng-class="getIcon(result)"></i>'+
                            '<div class="result-info">'+
                                '<span class="result-title">{{result.tm_title[0]}}</span>'+
                                '<p data-ng-if="hasSpecialties(result)">'+
                                    '<span data-ng-repeat="specialty in result.sm_field_specialties">{{specialty}}{{$last ? \'\' : \', \'}}</span>'+
                                '</p>'+
                                '<p data-ng-if="hasLocation(result)">'+
                                    '<span class="location">{{result.tm_field_location_address$city[0]}}, {{result.tm_field_location_address$province[0]}}</span>'+
                                '</p>'+
                            '</div>'+
                            '<span class="result-type">{{getTypeName(result)}}</span>'+
                            '<div data-ng-if="getTypeName(result) === \'Doctor\'" data-ng-doctor-small-thumbnail class="doctor-photo-holder" data-doctor="result"></div>'+
                          '</li>'+
                    '</ul>',
        scope: {
            searchType: '='
        },
        controller: function($scope, $location, $rootScope, SolrService, AllSearchParams) {
            $scope.location = $location;
            $scope.query = '';
            $scope.solr = SolrService;
            $scope.results = {};
            $scope.allSearch = AllSearchParams;

            AllSearchParams.setup($scope.start, $scope.rows);

            $scope.getIcon = function(result) {
                if(result !== undefined && (result.ss_type !== undefined || result.ss_type !== '')){
                    if(result.ss_type === 'blog' || result.ss_type === 'blog_post'){
                        return 'icon-quote-right';
                    }

                    if(result.ss_type === 'events'){
                        return 'icon-calendar';
                    }

                    if(result.ss_type === 'patients_and_visitors' || result.ss_type === 'patient_story' || result.ss_type === 'general_page' || result.ss_type === 'super_location_detail' || result.ss_type === 'patient_experience'){
                        return 'icon-group';
                    }

                    if(result.ss_type === 'treatment_detail' || result.ss_type === 'treatment_group'){
                        return 'icon-plus-sign-alt';
                    }

                    if(result.ss_type === 'staff_member' || result.ss_type === 'physician_profile'){
                        return 'icon-user-md';
                    }

                    if(result.ss_type === 'hospital_location' || result.ss_type === 'treatment_location' || result.ss_type === 'super_location_page'){
                        return 'icon-map-marker';
                    }

                    if(result.ss_type === 'clinical_trial_detail' || result.ss_type === 'cancer_clinical_trial') {
                        return 'icon-beaker';
                    }
                }

                return '';
            };

            $scope.getTypeName = function(result){
                if(result !== undefined && (result.ss_type !== undefined || result.ss_type !== '')){
                    if(result.ss_type === 'blog' || result.ss_type === 'blog_post'){
                        return 'Blog';
                    }

                    if(result.ss_type === 'events'){
                        return 'Events';
                    }

                    if(result.ss_type === 'patients_and_visitors' || result.ss_type === 'patient_story' || result.ss_type === 'general_page' || result.ss_type === 'super_location_detail' || result.ss_type === 'patient_experience'){
                        return 'General';
                    }

                    if(result.ss_type === 'treatment_detail' || result.ss_type === 'treatment_group'){
                        return 'Treatment';
                    }

                    if(result.ss_type === 'staff_member' || result.ss_type === 'physician_profile'){
                        return 'Doctor';
                    }

                    if(result.ss_type === 'hospital_location' || result.ss_type === 'treatment_location' || result.ss_type === 'super_location_page'){
                        return 'Location';
                    }

                    if(result.ss_type === 'clinical_trial_detail' || result.ss_type === 'cancer_clinical_trial') {
                        return 'Clinical trial';
                    }
                }

                return '';
            };

            $scope.hasSpecialties = function(result) {
                if(result.sm_field_specialties !== undefined &&
                    result.sm_field_specialties.length > 0){
                    return true;
                }
                return false;
            };

            $scope.hasLocation = function(result) {
                if(result.ss_type === 'hospital_location' || result.ss_type === 'treatment_location' || result.ss_type === 'super_location_page'){
                    return true;
                }
                return false;
            };

            $scope.submitQuery = function() {
                var query = '';
                if ($scope.query !== undefined){
                    query = $scope.query;
                }

                $scope.location.search({q: $scope.query, page: 0});
                window.location = encodeURI($scope.url + query);

                // If a modal menu i.e. main menu lightbox is open,
                // ensure it closes.
                if(angular.element('#overlay').css('display') === 'block'){
                    angular.element('#overlay').click();
                }
            };

            $scope.$watch('query', function(newQuery, oldQuery){
                if (newQuery !== '') {
                    $scope.solr.customQuery('solr.autoSuggest', $scope.query, $scope.allSearch.getFilterQueries(), $scope.allSearch.getPhraseFields(), $scope.allSearch.getQueryFields(),    $scope.allSearch.getBoostQueries(), $scope.allSearch.getParams(), $scope.allSearch.getReturnFields() );
                }
            });

            $scope.$on('solr.autoSuggest', function(sender, newResults){
                if($scope.query === ''){
                    $scope.results = [];
                } else{
                    $scope.results = newResults.response.docs;
                }

            });

            // This function needs to called from data-ng-click on an achor tag
            // if the user is angular page of same type that they select in the results.
            // example: If the user is on a doctor profile page and they select
            // another doctor profile page in the list of suggestions.
			$scope.closeModal = function($event) {
				if($event) {
                    window.location.href = $event.target.href;
				}
			};
        },
        link: function(scope, element, attrs) {
            if (attrs.url !== undefined) {
                scope.url = attrs.url;
            }

            if (attrs.ignorePath !== undefined) {
                scope.ignorePath = attrs.ignorePath;
            }

            if (attrs.placeholderText !== undefined) {
                scope.placeholderText = attrs.placeholderText;
            }

			var thisScope = scope;
            element.bind('submit', function() {
                element.find('input').blur();

				if(thisScope.$parent.triggerSearch !== undefined) {
					thisScope.$apply(thisScope.$parent.triggerSearch());
				}
            });
        }
    };
});
